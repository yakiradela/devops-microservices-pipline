name: main pipeline

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  CLUSTER_NAME: cluster

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  terraform:
    name: Provision Infrastructure
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init, Plan and Apply
        working-directory: devops-microservices-pipline/infrastructure
        run: |
          terraform init
          terraform plan 
          terraform apply -auto-approve

  ansible:
    name: Install Docker & kubectl
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i devops-microservices-pipline/config/hosts devops-microservices-pipline/config/playbook.yml 

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: ansible
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Images
        run: |
          docker build -t yakiradela/auth:latest ./devops-microservices-pipline/services/auth
          docker build -t yakiradela/backend:latest ./devops-microservices-pipline/services/backend
          docker build -t yakiradela/frontend:latest ./devops-microservices-pipline/services/frontend
          docker push yakiradela/auth:latest
          docker push yakiradela/backend:latest
          docker push yakiradela/frontend:latest

  deploy: 
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl (v1.28.2)
        run: |
          KUBECTL_VERSION="v1.28.2"
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f devops-microservices-pipline/k8s/auth-deployment.yaml
          kubectl apply -f devops-microservices-pipline/k8s/backend-deployment.yaml
          kubectl apply -f devops-microservices-pipline/k8s/frontend-deployment.yaml
          kubectl apply -f devops-microservices-pipline/k8s/ingress.yaml
